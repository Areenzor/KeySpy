name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint-and-test:
    name: Lint, Test, and Analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11' # Use the latest stable Python version

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint Code with Black and isort
        run: |
          pip install black isort
          black --check .
          isort --check-only .

      - name: Run Static Code Analysis with Flake8
        run: |
          pip install flake8
          flake8 .

      - name: Security Static Analysis with Bandit
        run: |
          pip install bandit
          bandit -r keyspy

      - name: Run Tests with Pytest and Generate Coverage
        run: |
          pip install pytest pytest-cov
          pytest --cov=keyspy --cov-report=xml

      - name: Upload Coverage Report to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          flags: unittests
          fail_ci_if_error: true

      - name: Dependency Vulnerability Scanning
        run: |
          pip install safety
          safety check

  build-package:
    name: Build Distribution Package
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Build Distribution Package
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          python -m build

      - name: Verify Package Build
        run: |
          twine check dist/*

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-package
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Deployment Tools
        run: |
          python -m pip install --upgrade pip
          pip install deploy-cli-tool  # Replace with your deployment tool (e.g., AWS CLI, Docker)

      - name: Deploy Application
        env:
          DEPLOYMENT_ENV: production
        run: |
          echo "Deploying application to production..."
          # Add your deployment scripts here, e.g., cloud CLI commands, SSH-based deployment, or Docker.

      - name: Post-Deployment Health Check
        run: |
          echo "Running post-deployment health checks..."
          # Add commands to validate the deployment, like API tests or service health checks.
